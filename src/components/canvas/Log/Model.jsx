/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF, useTexture } from '@react-three/drei';
import model from '@/models/log.glb';
import bakedImage from '@/img/logBaked.png';
import aoImage from '@/img/logAO.png';

export default function Model({ ...props }) {
  const group = useRef();
  const { nodes } = useGLTF(model);

  const [bakedTexture, aoTexture] = useTexture(
    [bakedImage.src, aoImage.src],
    ([baked, ao]) => {
      baked.flipY = false;
      ao.flipY = false;
      baked.encoding = 'sRGB';
    }
  );

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.log.geometry}>
        <meshPhongMaterial map={bakedTexture} aoMap={aoTexture} />
      </mesh>
      <mesh geometry={nodes.logBinds.geometry}>
        <meshPhongMaterial color={'#BCB8C1'} />
      </mesh>
    </group>
  );
}

useGLTF.preload(model);
